<?php
/**
 * @file
 * Code for the JournalStream Web Resource feature.
 */

include_once('journalstream_web_resource.features.inc');

define('JS_WEB_RESOURCE_NODE_TYPE', 'web_resource');

/**
 * Implements hook_form()
*/
function journalstream_web_resource_menu() {
  //Import Component for JournalStream 
  $items['node/%node/web_resource_import'] = array(
    'title' => 'Web Resource Import',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('journalstream_web_resource_import_form'),
    'file' => 'journalstream_web_resource.import.inc',
    'access callback' => 'journalstream_web_resource_local_task_loader',
    'access arguments' => array(1),
    'weight' => 8,
  );

  return $items;
}

function journalstream_web_resource_admin_paths() {
  $paths = array( 
    'node/*/web_resource_import' => TRUE,
  );
  return $paths;
}

function journalstream_web_resource_local_task_loader($node) {
  global $user;

  //Check node access perms
  $access_granted = node_access('update', $node);

  if($node->type == JS_TOPIC_QUEUE_TYPE && $access_granted) {
    return TRUE;
  }
  else {
    return FALSE;
  } 
}

/**
 * Hook for saving a Web Resource by URL.
 * Attempts to import Title and Description from remote resource 
 * @param $url
 *   Remote URL to import
 * @return $nid
 *   Returns nid of saved web resource
*/
function journalstream_web_resource_import_by_url($url) {
  global $user;
  require_once('includes/phpQuery-onefile.php');
  $request = drupal_http_request($url);
  $node = new stdClass();
  if($request->code == '200' && !empty($request->data)) {
    $document = phpQuery::newDocumentHTML($request->data);
    $title = $document->find('title')->text();
    $description = $document->find('meta[name="description"]')->attr('content');
    //Create the web resource node object
    $node->type = JS_WEB_RESOURCE_NODE_TYPE;
    node_object_prepare($node);
    $node->language = LANGUAGE_NONE;
    $node->title = $title;
    $node->field_url[LANGUAGE_NONE][0]['url'] = $url;
    $node->body[LANGUAGE_NONE][0]['value'] = $description;
    $node->uid = $user->uid;
    $node->status = 0;
    $result = node_save($node);
    return !empty($node->nid) ? $node->nid : false;
  }
  return false;
}
